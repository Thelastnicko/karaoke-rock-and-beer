{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/Documents/web-apps/karaoke-rock-and-beer/src/components/Songs/AddSongs.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddSongs = () => {\n  _s();\n  const [artist, setArtist] = useState(\"\");\n  const [songName, setSongName] = useState(\"\");\n  const [lyrics, setLyrics] = useState(\"\");\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(`Artist: ${artist}, Song Name: ${songName}, Lyrics: ${lyrics}`);\n    // You can use this information to send a request to a server or update state in your parent component\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"artist\",\n      children: \"Artist:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"artist\",\n      value: artist,\n      onChange: event => setArtist(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"songName\",\n      children: \"Song Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"songName\",\n      value: songName,\n      onChange: event => setSongName(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"lyrics\",\n      children: \"Lyrics:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"lyrics\",\n      value: lyrics,\n      onChange: event => setLyrics(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(AddSongs, \"uQ5AUQIWpblV2Jh/zzLCl4sawB8=\");\n_c = AddSongs;\nexport default AddSongs;\nvar _c;\n$RefreshReg$(_c, \"AddSongs\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddSongs","_s","artist","setArtist","songName","setSongName","lyrics","setLyrics","handleSubmit","event","preventDefault","console","log","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/nicolas/Documents/web-apps/karaoke-rock-and-beer/src/components/Songs/AddSongs.js"],"sourcesContent":["\nimport React, { useState } from \"react\";\n\n\nconst AddSongs = () => {\n\n  const [artist, setArtist] = useState(\"\");\n  const [songName, setSongName] = useState(\"\");\n  const [lyrics, setLyrics] = useState(\"\");\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(`Artist: ${artist}, Song Name: ${songName}, Lyrics: ${lyrics}`);\n    // You can use this information to send a request to a server or update state in your parent component\n  };\n\n  return (\n\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"artist\">Artist:</label>\n      <input\n        type=\"text\"\n        id=\"artist\"\n        value={artist}\n        onChange={(event) => setArtist(event.target.value)}\n      />\n\n      <label htmlFor=\"songName\">Song Name:</label>\n      <input\n        type=\"text\"\n        id=\"songName\"\n        value={songName}\n        onChange={(event) => setSongName(event.target.value)}\n      />\n\n      <label htmlFor=\"lyrics\">Lyrics:</label>\n      <textarea\n        id=\"lyrics\"\n        value={lyrics}\n        onChange={(event) => setLyrics(event.target.value)}\n      />\n\n      <button type=\"submit\">Add Song</button>\n    </form>\n  );\n\n\n\n\n\n\n\n\n  \n};\n\nexport default AddSongs;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAGxC,MAAMW,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAE,WAAUV,MAAO,gBAAeE,QAAS,aAAYE,MAAO,EAAC,CAAC;IAC3E;EACF,CAAC;;EAED,oBAEEP,OAAA;IAAMc,QAAQ,EAAEL,YAAa;IAAAM,QAAA,gBAC3Bf,OAAA;MAAOgB,OAAO,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACvCpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,QAAQ;MACXC,KAAK,EAAEpB,MAAO;MACdqB,QAAQ,EAAGd,KAAK,IAAKN,SAAS,CAACM,KAAK,CAACe,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnD,eAEFpB,OAAA;MAAOgB,OAAO,EAAC,UAAU;MAAAD,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eAC5CpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,UAAU;MACbC,KAAK,EAAElB,QAAS;MAChBmB,QAAQ,EAAGd,KAAK,IAAKJ,WAAW,CAACI,KAAK,CAACe,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrD,eAEFpB,OAAA;MAAOgB,OAAO,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACvCpB,OAAA;MACEsB,EAAE,EAAC,QAAQ;MACXC,KAAK,EAAEhB,MAAO;MACdiB,QAAQ,EAAGd,KAAK,IAAKF,SAAS,CAACE,KAAK,CAACe,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnD,eAEFpB,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAAAN,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClC;AAWX,CAAC;AAAClB,EAAA,CAnDID,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAqDd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}